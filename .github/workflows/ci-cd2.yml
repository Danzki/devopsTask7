name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:  # Для ручного запуска

env:
  LOG_FILE: log.txt

jobs:
  build-job:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      log-file: ${{ steps.upload.outputs.log-file }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build and create log
      run: |
        echo "Compiling the code..." | tee -a "${{ env.LOG_FILE }}"
        echo "Compile complete." | tee -a "${{ env.LOG_FILE }}"
        
    - name: Upload log artifact
      uses: actions/upload-artifact@v4
      id: upload
      with:
        name: build-log
        path: ${{ env.LOG_FILE }}
        retention-days: 1

  test-job1:
    name: Test Stage 1
    runs-on: ubuntu-latest
    needs: build-job
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download log artifact
      uses: actions/download-artifact@v4
      with:
        name: build-log
        
    - name: Run tests
      run: |
        test -f "${{ env.LOG_FILE }}"
        echo "Running test_job1... This will take about 5 seconds." | tee -a "${{ env.LOG_FILE }}"
        wc -c "${{ env.LOG_FILE }}" | awk '{print "size(bytes):",$1}'
        sleep 5
        
    - name: Upload updated log
      uses: actions/upload-artifact@v4
      with:
        name: test1-log
        path: ${{ env.LOG_FILE }}
        retention-days: 1

  test-job2:
    name: Test Stage 2
    runs-on: ubuntu-latest
    needs: test-job1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download log artifact
      uses: actions/download-artifact@v4
      with:
        name: test1-log
        
    - name: Run tests
      run: |
        test -f "${{ env.LOG_FILE }}"
        echo "Running test_job2... This will take about 5 seconds." | tee -a "${{ env.LOG_FILE }}"
        wc -c "${{ env.LOG_FILE }}" | awk '{print "size(bytes):",$1}'
        sleep 5
        
    - name: Upload updated log
      uses: actions/upload-artifact@v4
      with:
        name: test2-log
        path: ${{ env.LOG_FILE }}
        retention-days: 1

  test-job3:
    name: Test Stage 3
    runs-on: ubuntu-latest
    needs: test-job2
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download log artifact
      uses: actions/download-artifact@v4
      with:
        name: test2-log
        
    - name: Run tests
      run: |
        test -f "${{ env.LOG_FILE }}"
        echo "Running test_job3... This will take about 5 seconds." | tee -a "${{ env.LOG_FILE }}"
        wc -c "${{ env.LOG_FILE }}" | awk '{print "size(bytes):",$1}'
        sleep 5
        
    - name: Upload final test log
      uses: actions/upload-artifact@v4
      with:
        name: test3-log
        path: ${{ env.LOG_FILE }}
        retention-days: 1

  deploy-to-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test-job3
    environment: dev
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download log artifact
      uses: actions/download-artifact@v4
      with:
        name: test3-log
        
    - name: Deploy to development
      run: |
        echo "ENV-DEV - Deploying application..." | tee -a "${{ env.LOG_FILE }}"
        echo "Application successfully deployed."
        cat -n "${{ env.LOG_FILE }}"
        
    - name: Upload deployment log
      uses: actions/upload-artifact@v4
      with:
        name: dev-deploy-log
        path: ${{ env.LOG_FILE }}
        retention-days: 1

  deploy-to-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    environment: production
    if: github.ref == 'refs/heads/main'  # Аналог rules в GitLab
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download log artifact
      uses: actions/download-artifact@v4
      with:
        name: dev-deploy-log
        
    - name: Deploy to production
      run: |
        echo "ENV-PRD - Deploying application..." | tee -a "${{ env.LOG_FILE }}"
        echo "Application successfully deployed."
        cat -n "${{ env.LOG_FILE }}"   
